# -*- coding: utf-8 -*-
"""Drought Farms.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1dyLLpmdLivabkFsNMMra9zxaHsYVdCNg

# Finding Ideal Land for Farms in Areas of Drought
Research by Arman Bhalla
"""

!pip install sentinelhub --upgrade

!sentinelhub.config --show

!sentinelhub.config --instance_id e8a19352-2581-4ad3-9168-816b7bce2097

# %reload_ext autoreload
# %autoreload 2
# %matplotlib inline
import datetime
import numpy as np

import sys
from PIL import Image

import matplotlib.pyplot as plt
from sentinelhub import WmsRequest, WcsRequest, MimeType, CRS, BBox

def plot_image(image, factor=1):
    """
    Utility function for plotting RGB images.
    """
    fig = plt.subplots(nrows=1, ncols=1, figsize=(15, 7))

    if np.issubdtype(image.dtype, np.floating):
        plt.imshow(np.minimum(image * factor, 1))
    else:
        plt.imshow(image)

betsiboka_coords_wgs84 = [46.16, -16.15, 46.51, -15.58]
betsiboka_bbox = BBox(bbox=betsiboka_coords_wgs84, crs=CRS.WGS84)

#bounds = [35.16, -15.15, 35.51, -15.15]
bounds_bbox = BBox(bbox=bounds, crs=CRS.WGS84)
wms_ndwi_req = WmsRequest(layer='NDWI',
                                    bbox=betsiboka_bbox,
#                                     time='2017-12-15',
                                    width=512, height=856,
                                    instance_id="e8a19352-2581-4ad3-9168-816b7bce2097")
wms_vegetation_req = WmsRequest(layer='NDVI',
                                    bbox=betsiboka_bbox,
#                                     time='2017-12-15',
                                    width=512, height=856,
                                    instance_id="e8a19352-2581-4ad3-9168-816b7bce2097")
wms_ndwi = wms_ndwi_req.get_data()
wms_vegetation = wms_vegetation_req.get_data()

print(wms_vegetation)
print(wms_ndwi)

print(wms_vegetation[0]+wms_ndwi[0])
# The sum of vegetation and true colour images
sum = wms_vegetation[0]+wms_ndwi[0]

print('Returned data is of type = %s and length %d.' % (type(wms_true_color_img), len(wms_true_color_img)))
print('Single element in the list is of type {} and has shape {}'.format(type(wms_true_color_img[-1]), wms_true_color_img[-1].shape))

plot_image(wms_true_color_img[-1]) # water
plot_image(wms_vegetation[-1]) #vegetation
plot_image(sum)

